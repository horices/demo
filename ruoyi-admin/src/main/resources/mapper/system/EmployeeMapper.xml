<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.EmployeeMapper">

    <resultMap type="Employee" id="EmployeeResult">
        <result property="id"    column="id"    />
        <result property="empName"    column="emp_name"    />
        <result property="sex"    column="sex"    />
        <result property="age"    column="age"    />
        <result property="deptName"    column="dept_name"    />
        <result property="empDegreeName"    column="emp_degree_name"    />
    </resultMap>

    <sql id="selectEmployeeVo">
        select id, emp_name, sex, age, dept_name, emp_degree_name from employee
    </sql>

    <select id="selectEmployeeList" parameterType="Employee" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        <where>
            <if test="empName != null  and empName != ''"> and emp_name like concat('%', #{empName}, '%')</if>
            <if test="deptName != null  and deptName != ''"> and dept_name = #{deptName}</if>
            <if test="empDegreeName != null  and empDegreeName != ''"> and emp_degree_name = #{empDegreeName}</if>
        </where>
    </select>

    <select id="selectEmployeeById" parameterType="Long" resultMap="EmployeeResult">
        <include refid="selectEmployeeVo"/>
        where id = #{id}
    </select>

    <insert id="insertEmployee" parameterType="Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="empName != null">emp_name,</if>
            <if test="sex != null">sex,</if>
            <if test="age != null">age,</if>
            <if test="deptName != null">dept_name,</if>
            <if test="empDegreeName != null">emp_degree_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="empName != null">#{empName},</if>
            <if test="sex != null">#{sex},</if>
            <if test="age != null">#{age},</if>
            <if test="deptName != null">#{deptName},</if>
            <if test="empDegreeName != null">#{empDegreeName},</if>
         </trim>
    </insert>

    <update id="updateEmployee" parameterType="Employee">
        update employee
        <trim prefix="SET" suffixOverrides=",">
            <if test="empName != null">emp_name = #{empName},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="age != null">age = #{age},</if>
            <if test="deptName != null">dept_name = #{deptName},</if>
            <if test="empDegreeName != null">emp_degree_name = #{empDegreeName},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteEmployeeById" parameterType="Long">
        delete from employee where id = #{id}
    </delete>

    <delete id="deleteEmployeeByIds" parameterType="String">
        delete from employee where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>
